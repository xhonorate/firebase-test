/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    PrototypePete_body: THREE.Mesh
    PrototypePete_armLeft: THREE.Mesh
    PrototypePete_armRight: THREE.Mesh
    PrototypePete_head: THREE.Mesh
  }
  materials: {
    PrototypePete: THREE.MeshStandardMaterial
  }
}

export default function PrototypePete({bones}: any) {
  const { nodes, materials } = useGLTF('/assets/kaykit/Models/characters/PrototypePete.gltf') as unknown as GLTFResult
  console.log(bones);
  return (
    <group>
      <primitive object={bones.Body}>
        <mesh name={'Body'} geometry={nodes.PrototypePete_body.geometry} material={nodes.PrototypePete_body.material} />
        
        <primitive object={bones.armLeft}>
          <mesh
            name={'armLeft'}
            geometry={nodes.PrototypePete_armLeft.geometry}
            material={nodes.PrototypePete_armLeft.material}
            position={[0.2, 0.63, 0]}
          />
        </primitive>

        <primitive object={bones.armRight}>
          <mesh
            name={'armRight'}
            geometry={nodes.PrototypePete_armRight.geometry}
            material={nodes.PrototypePete_armRight.material}
            position={[-0.2, 0.63, 0]}
          />
        </primitive>

        <primitive object={bones.Head}>
          <mesh
            name={'Head'}
            geometry={nodes.PrototypePete_head.geometry}
            material={nodes.PrototypePete_head.material}
            position={[0, 0.7, 0]}
          />
        </primitive>
      </primitive>
    </group>
  )
}

useGLTF.preload('/assets/kaykit/Models/characters/PrototypePete.gltf')
