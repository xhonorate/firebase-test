/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'
import { GroupProps } from '@react-three/fiber'
import CharacterMage from './character_mage'
import PrototypePete from '../test/PrototypePete';
import { randomChoice } from '../../../Board'

type GLTFResult = GLTF & {
  nodes: {
    PrototypePete: THREE.SkinnedMesh
    Body: THREE.Bone
  }
  materials: {
    PrototypePete: THREE.MeshStandardMaterial
  }
  animations: GLTFAction[];
}

export type ActionName =
  | 'Attack(1h)'
  | 'AttackCombo'
  | 'AttackSpinning'
  | 'BasePose'
  | 'Block'
  | 'Cheer'
  | 'Climbing'
  | 'Dance'
  | 'DashBack'
  | 'DashFront'
  | 'DashLeft'
  | 'DashRight'
  | 'Defeat'
  | 'HeavyAttack'
  | 'Hop'
  | 'Idle'
  | 'Interact'
  | 'Jump'
  | 'LayingDownIdle'
  | 'PickUp'
  | 'Roll'
  | 'Run'
  | 'Shoot(1h)'
  | 'Shoot(2h)'
  | 'Shoot(2h)Bow'
  | 'Shooting(1h)'
  | 'Shooting(2h)'
  | 'Throw'
  | 'Walk'
  | 'Wave'
interface GLTFAction extends THREE.AnimationClip {
  name: ActionName;
}

interface AnimatedProps extends GroupProps {
  anim: ActionName | null
}

export default function AnimatedCharacter({anim, ...props}: AnimatedProps) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/assets/kaykit/Models/characters/PrototypePete.gltf') as any
  const { nodes: peteNodes, materials: peteMaterials, animations } = useGLTF('/assets/kaykit/Models/characters/AnimatedCharacter.gltf.glb') as unknown as GLTFResult
  const { actions } = useAnimations<GLTFAction>(animations, group)
  
  useEffect(() => {
    if (!!anim) {
      console.log(anim);
      actions[anim].play();
    }
  }, [anim, actions])

  return (
    <group ref={group} {...props} dispose={null} onClick={() => {
      const newAction = randomChoice(Object.keys(actions));
      console.log(newAction);
      actions[newAction].play()
    }}>
      <primitive scale={10} object={nodes.Scene} skeleton={peteNodes.PrototypePete.skeleton} />
    </group>
  )
}

useGLTF.preload('/assets/kaykit/Models/characters/AnimatedCharacter.gltf.glb')
