/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import * as THREE from 'three'
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { GLTF } from 'three/examples/jsm/loaders/GLTFLoader'

type GLTFResult = GLTF & {
  nodes: {
    PrototypePete_body: THREE.Mesh
    PrototypePete_armLeft: THREE.Mesh
    PrototypePete_armRight: THREE.Mesh
    PrototypePete_head: THREE.Mesh
  }
  materials: {
    PrototypePete: THREE.MeshStandardMaterial
  }
}

export default function Model(props: JSX.IntrinsicElements['group']) {
  const group = useRef<THREE.Group>()
  const { nodes, materials } = useGLTF('/PrototypePete.gltf') as GLTFResult
  return (
    <group ref={group} {...props} dispose={null}>
      <mesh geometry={nodes.PrototypePete_body.geometry} material={nodes.PrototypePete_body.material}>
        <mesh
          geometry={nodes.PrototypePete_armLeft.geometry}
          material={nodes.PrototypePete_armLeft.material}
          position={[0.2, 0.63, 0]}
        />
        <mesh
          geometry={nodes.PrototypePete_armRight.geometry}
          material={nodes.PrototypePete_armRight.material}
          position={[-0.2, 0.63, 0]}
        />
        <mesh
          geometry={nodes.PrototypePete_head.geometry}
          material={nodes.PrototypePete_head.material}
          position={[0, 0.7, 0]}
        />
      </mesh>
    </group>
  )
}

useGLTF.preload('/PrototypePete.gltf')
